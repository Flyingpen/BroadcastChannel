---
import '../assets/normalize.css'
import '../assets/style.css'
import '../assets/global.css'
import { SEO } from 'astro-seo'
import { getConfig } from '../lib/config'
import backToTopIcon from '../assets/back-to-top.svg'

const { SITE_URL, RSS_URL, RSS_PREFIX } = Astro.locals
const { channel } = Astro.props

// 使用配置系统获取值
const locale = getConfig(import.meta.env, Astro, 'LOCALE', 'en')
const themeColor = getConfig(import.meta.env, Astro, 'THEME_COLOR', '#f4f1ec')
const customCSS = getConfig(import.meta.env, Astro, 'CUSTOM_CSS', '')
const customJS = getConfig(import.meta.env, Astro, 'CUSTOM_JS', '')

const seo = channel?.seo
const reqPathname = Astro.url.pathname.replace(/\/$/, '')
const canonical = SITE_URL.startsWith('http') ? new URL(SITE_URL).origin + reqPathname : Astro.url.origin + reqPathname

const { origin, pathname } = new URL(canonical)
const twitter = getConfig(import.meta.env, Astro, 'TWITTER')

const seoParams = {
  title: seo?.title ?? getConfig(import.meta.env, Astro, 'SITE_TITLE'),
  description: seo?.text ?? channel?.description ?? getConfig(import.meta.env, Astro, 'SITE_DESCRIPTION'),
  canonical,
  noindex: seo?.noindex ?? getConfig(import.meta.env, Astro, 'NO_INDEX', false),
  nofollow: seo?.nofollow ?? getConfig(import.meta.env, Astro, 'NO_FOLLOW', false),
  openGraph: {
    basic: {
      type: 'website',
      title: channel?.title ?? getConfig(import.meta.env, Astro, 'SITE_TITLE', ''),
      url: canonical,
      image: channel?.avatar ? channel.avatar : origin + '/favicon.ico',
    },
    optional: {
      description: seo?.text ?? channel?.description ?? getConfig(import.meta.env, Astro, 'SITE_DESCRIPTION'),
      locale,
    },
  },
  extend: {
    link: [
      {
        rel: 'icon',
        href: channel?.avatar
          ? `https://wsrv.nl/?w=64&h=64&fit=cover&mask=circle&url=ssl:${channel?.avatar?.replace(/^https?:\/\//, '')}`
          : '/favicon.svg',
      },
    ],
  },
}

const GOOGLE_SEARCH_SITE = getConfig(import.meta.env, Astro, 'GOOGLE_SEARCH_SITE')
const searchAction = GOOGLE_SEARCH_SITE ? 'https://www.google.com/search' : '/search/result'

const HEADER_INJECT = getConfig(import.meta.env, Astro, 'HEADER_INJECT', '')
const FOOTER_INJECT = getConfig(import.meta.env, Astro, 'FOOTER_INJECT', '')
const TAGS = getConfig(import.meta.env, Astro, 'TAGS')
const LINKS = getConfig(import.meta.env, Astro, 'LINKS')
const navs = (getConfig(import.meta.env, Astro, 'NAVS') || '')
  .split(';')
  .filter(Boolean)
  .map((link) => {
    link = link.split(',')
    return {
      title: link[0]?.trim(),
      href: link[1]?.trim(),
    }
  })

// 解析 UI 文本配置
const uiTextConfig = getConfig(import.meta.env, Astro, 'UI_TEXT', '{}')
let uiText = {}
try {
  uiText = typeof uiTextConfig === 'string' ? JSON.parse(uiTextConfig) : uiTextConfig
} catch {
  uiText = {}
}

// 默认 UI 文本
const defaultUIText = {
  home: 'Home',
  tags: 'Tags',
  links: 'Links',
  search: 'Search',
  poweredBy: 'Powered by',
}

// 合并 UI 文本
const finalUIText = { ...defaultUIText, ...uiText }
---

<!doctype html>
<html lang={locale ?? 'en'}>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="theme-color" content={themeColor} />
    <link rel="alternate" type="application/rss+xml" title={`${RSS_PREFIX}${channel?.title}`} href={RSS_URL} />
    <style is:inline>
      @view-transition {
        navigation: auto; /* enabled */
      }
    </style>
    {customCSS && <style is:inline set:html={customCSS} />}
    <SEO
      titleTemplate={`%s | ${channel?.title}`}
      titleDefault={[channel?.title, seoParams.description].filter(Boolean).join(' - ')}
      twitter={{
        card: 'summary_large_image',
        creator: twitter ? `@${twitter}` : undefined,
      }}
      {...seoParams}
    />
    <Fragment set:html={HEADER_INJECT} />
  </head>

  <body>
    <div id="wrapper">
      <div id="container">
        <div id="main-container">
          <slot />
        </div>
        <div id="aside-container">
          <slot name="aside">
            <div class="nav">
              <div class="nav-item">
                <a href={SITE_URL} title={channel?.title} class={`nav-link ${pathname === '/' ? 'current' : ''}`}>
                  {finalUIText.home}
                </a>
              </div>
              {
                TAGS ? (
                  <div class="nav-item">
                    <a
                      href={`${SITE_URL}tags`}
                      title={finalUIText.tags}
                      class={`nav-link ${pathname === '/tags' ? 'current' : ''}`}
                    >
                      {finalUIText.tags}
                    </a>
                  </div>
                ) : null
              }
              {
                LINKS ? (
                  <div class="nav-item">
                    <a
                      href={`${SITE_URL}links`}
                      title={finalUIText.links}
                      class={`nav-link ${pathname === '/links' ? 'current' : ''}`}
                    >
                      {finalUIText.links}
                    </a>
                  </div>
                ) : null
              }
              {
                navs.map((nav) => (
                  <div class="nav-item">
                    <a href={nav.href} title={nav.title} target="_blank" rel="noopener" class="nav-link">
                      {nav.title}
                    </a>
                  </div>
                ))
              }
            </div>
            <input class="search-icon" name="icon" type="checkbox" placeholder={finalUIText.search} />
            <form class="search-form" action={searchAction} method="get">
              {GOOGLE_SEARCH_SITE ? <input type="hidden" name="as_sitesearch" value={GOOGLE_SEARCH_SITE} /> : null}
              <input type="text" name="q" placeholder={finalUIText.search} />
            </form>
            <div class="copyright-wrap">
              {finalUIText.poweredBy}
              <a
                href="https://github.com/ccbikai/BroadcastChannel"
                title="BroadcastChannel"
                target="_blank"
                rel="noopener"
              >
                BroadcastChannel
              </a> &
              <a href="https://github.com/Planetable/SiteTemplateSepia" title="Sepia" target="_blank" rel="noopener">
                Sepia
              </a>
            </div>
            {
              FOOTER_INJECT && (
                <div class="footer-inject-wrap">
                  <Fragment set:html={FOOTER_INJECT} />
                </div>
              )
            }
          </slot>
        </div>
      </div>
    </div>
    <a href="#wrapper" id="back-to-top" aria-label="Back to top">
      <img {...backToTopIcon} alt="Back to Top" />
    </a>
    {customJS && <script is:inline set:html={customJS} />}
  </body>
</html>
