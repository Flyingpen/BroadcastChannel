---
import moonIcon from '../assets/moon.svg'
import sunIcon from '../assets/sun.svg'
---

<button id="theme-toggle" class="theme-toggle" aria-label="切换主题" title="切换主题">
  <img id="theme-icon-sun" src={sunIcon.src} alt="明亮模式" class="theme-icon" />
  <img id="theme-icon-moon" src={moonIcon.src} alt="暗色模式" class="theme-icon" />
</button>

<script is:inline>
  // 直接的主题切换脚本 - 简化版本确保功能正常
  console.info('Theme script loaded')

  // 立即设置默认主题
  function setInitialTheme() {
    console.info('Setting initial theme')

    // 标记JavaScript已接管主题管理
    document.documentElement.classList.add('js-theme-ready')

    let savedTheme = null
    try {
      savedTheme = localStorage.getItem('theme')
    } catch (e) {
      console.warn('Cannot access localStorage', e)
    }

    // 默认为 light
    const theme = savedTheme === 'dark' ? 'dark' : 'light'
    console.info('Initial theme:', theme)

    document.documentElement.setAttribute('data-theme', theme)
    updateIcons(theme)
  }

  function updateIcons(theme) {
    console.info('Updating icons for theme:', theme)
    const sunIcon = document.getElementById('theme-icon-sun')
    const moonIcon = document.getElementById('theme-icon-moon')

    if (!sunIcon || !moonIcon) {
      console.error('Icons not found')
      return
    }

    if (theme === 'dark') {
      sunIcon.classList.remove('active')
      moonIcon.classList.add('active')
    } else {
      sunIcon.classList.add('active')
      moonIcon.classList.remove('active')
    }
  }

  function toggleTheme() {
    const currentTheme = document.documentElement.getAttribute('data-theme')
    const newTheme = currentTheme === 'dark' ? 'light' : 'dark'

    console.info('Toggling theme from', currentTheme, 'to', newTheme)

    document.documentElement.setAttribute('data-theme', newTheme)
    updateIcons(newTheme)

    try {
      localStorage.setItem('theme', newTheme)
    } catch (e) {
      console.warn('Cannot save to localStorage', e)
    }
  }

  // DOM 加载完成后初始化
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', () => {
      console.info('DOM loaded, initializing theme')
      setInitialTheme()

      const button = document.getElementById('theme-toggle')
      if (button) {
        button.addEventListener('click', (e) => {
          e.preventDefault()
          console.info('Theme button clicked')
          toggleTheme()
        })
        console.info('Theme button listener added')
      } else {
        console.error('Theme button not found')
      }
    })
  } else {
    console.info('DOM already loaded, initializing theme immediately')
    setInitialTheme()

    const button = document.getElementById('theme-toggle')
    if (button) {
      button.addEventListener('click', (e) => {
        e.preventDefault()
        console.info('Theme button clicked')
        toggleTheme()
      })
      console.info('Theme button listener added')
    } else {
      console.error('Theme button not found')
    }
  }
</script>

<style>
  .theme-toggle {
    position: relative;
    background: transparent;
    border: none;
    cursor: pointer;
    padding: 4px;
    border-radius: 4px;
    transition: background-color 0.2s ease;
    width: 24px;
    height: 24px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .theme-toggle:hover {
    background-color: var(--code-background-color);
  }

  .theme-icon {
    width: 16px;
    height: 16px;
    position: absolute;
    transition:
      opacity 0.2s ease,
      transform 0.2s ease;
    opacity: 0;
    transform: scale(0.8);
    filter: var(--icon-secondary-filter);
  }

  .theme-icon.active {
    opacity: 1;
    transform: scale(1);
  }

  /* 确保图标在不同主题下都能正确显示 */
  [data-theme='dark'] .theme-icon {
    filter: invert(1) var(--icon-secondary-filter);
  }
</style>
