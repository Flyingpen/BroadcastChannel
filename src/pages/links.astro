---
import Layout from '../layouts/base.astro'
import Header from '../components/header.astro'
import { getChannelInfo } from '../lib/telegram'
import { getEnv } from '../lib/env'

const channel = await getChannelInfo(Astro)

channel.seo = {
  title: '友链',
}

const links = (getEnv(import.meta.env, Astro, 'LINKS') || '')
  .split(';')
  .filter(Boolean)
  .map((link) => {
    link = link.split(',')
    return {
      title: link[0],
      href: link[1],
    }
  })

if (!links.length) {
  return Astro.redirect('/')
}
---

<Layout channel={channel}>
  <slot name="header">
    <Header channel={channel} />
  </slot>

  <section class="glass-panel space-y-6">
    <div class="flex flex-col gap-2 sm:flex-row sm:items-end sm:justify-between">
      <div>
        <h1 class="text-2xl font-semibold text-surface-900 dark:text-white">友链与站点</h1>
        <p class="text-sm text-slate-500 dark:text-slate-300">精选途径，帮助你与频道和相关社区保持联系。</p>
      </div>
      <span
        class="rounded-full border border-white/30 bg-white/70 px-4 py-1 text-xs font-semibold text-slate-500 dark:border-white/10 dark:bg-surface-900/70 dark:text-slate-300"
      >
        共 {links.length} 个链接
      </span>
    </div>

    <div class="grid gap-3 sm:grid-cols-2 lg:grid-cols-3">
      {
        links.map((link) => (
          <a
            href={link.href}
            class="group flex items-center justify-between gap-2 rounded-2xl border border-white/30 bg-white/80 px-5 py-4 text-sm font-medium text-surface-900 shadow-inner transition hover:-translate-y-1 hover:border-brand-400 hover:text-brand-400 dark:border-white/10 dark:bg-surface-900/70 dark:text-slate-200"
            target="_blank"
            rel="noopener"
            title={link.title}
          >
            <span>{link.title}</span>
            <span class="text-xs font-semibold text-brand-500 transition group-hover:translate-x-px">→</span>
          </a>
        ))
      }
    </div>
  </section>
</Layout>
